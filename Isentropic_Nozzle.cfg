%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                              %
% SU2 configuration file                                                       %
% Case description: Supersonic isentropic nozzle flow                          %
% Author: JoshTheEngineer                                                      %
%                                                                              %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%
%
% Physical governing equations (EULER, NAVIER_STOKES,
%                               TNE2_EULER, TNE2_NAVIER_STOKES,
%                               WAVE_EQUATION, HEAT_EQUATION, LINEAR_ELASTICITY,
%                               POISSON_EQUATION)
SOLVER = EULER


% Mathematical problem (DIRECT, CONTINUOUS_ADJOINT, LINEARIZED)
MATH_PROBLEM = DIRECT

% Restart solution (NO, YES)
RESTART_SOL = NO

SYSTEM_MEASUREMENTS= SI
% -------------------- COMPRESSIBLE FARFIELD DEFINITION --------------------%

% Mach number (non-dimensional, based on the free-stream values)
MACH_NUMBER = 1E-9

% Angle of attack (degrees, only for compressible flows)
AOA= 0.0

% Side-slip angle (degrees, only for compressible flows)
SIDESLIP_ANGLE= 0.0

% Init option to choose between Reynolds (default) or thermodynamics quantities
% for initializing the solution (REYNOLDS, TD_CONDITIONS)
INIT_OPTION = TD_CONDITIONS

% Free-stream option to choose between density and temperature (default) for
% initializing the solution (TEMPERATURE_FS, DENSITY_FS)
FREESTREAM_OPTION = TEMPERATURE_FS

% Free-stream pressure (101325.0 N/m^2, 2116.216 psf by default)
FREESTREAM_PRESSURE = 101325

% Free-stream temperature (288.15 K, 518.67 R by default)
FREESTREAM_TEMPERATURE = 288.15

REF_DIMENSIONALIZATION= DIMENSIONAL

% ---------------------- REFERENCE VALUE DEFINITION ---------------------------%

% Reference origin for moment computation
REF_ORIGIN_MOMENT_X = 0.00
REF_ORIGIN_MOMENT_Y = 0.00
REF_ORIGIN_MOMENT_Z = 0.00


% ------------------------- IDEAL GAS PROPERTIES -----------------------------%

% Different gas model (STANDARD_AIR, IDEAL_GAS, VW_GAS, PR_GAS)
FLUID_MODEL = IDEAL_GAS

% Ratio of specific heats (1.4 default and the value is hardcoded for the model STANDARD_AIR)
GAMMA_VALUE = 1.137

% Specific gas constant (287.058 J/kg*K default, hardcoded for model STANDARD_AIR)
GAS_CONSTANT = 208.37

% -------------------- BOUNDARY CONDITION DEFINITION --------------------------%

% Euler wall boundary marker(s) (NONE = no marker)
MARKER_EULER = (WALL)


INLET_TYPE= TOTAL_CONDITIONS
MARKER_INLET = (INLET, 1600, 5e6, 1.0, 0.0, 0.0)


MARKER_SUPERSONIC_OUTLET = (OUTLET)
%MARKER_OUTLET = (OUTLET,150000.0)

% Symmetry boundary marker(s) (NONE = no marker)
MARKER_SYM = ( SYMMETRY)


AXISYMMETRIC = YES

% ------------------------ SURFACES IDENTIFICATION ----------------------------%
% Marker(s) of the surface to be plotted or designed
MARKER_PLOTTING = (WALL)

% Marker(s) of the surface where the functional (Cd, Cl, etc.) will be evaluated
MARKER_MONITORING = (WALL)

% ------------- COMMON PARAMETERS DEFINING THE NUMERICAL METHOD ---------------%
%
% Numerical method for spatial gradients (GREEN_GAUSS, WEIGHTED_LEAST_SQUARES)
NUM_METHOD_GRAD= GREEN_GAUSS
%
% Courant-Friedrichs-Lewy condition of the finest grid
CFL_NUMBER= 10.0
%
% Adaptive CFL number (NO, YES)
CFL_ADAPT= NO
%
% Parameters of the adaptive CFL number (factor down, factor up, CFL min value,
%                                        CFL max value )
CFL_ADAPT_PARAM= ( 1.5, 0.5, 1.0, 100.0 )

%
% Runge-Kutta alpha coefficients
RK_ALPHA_COEFF= ( 0.66667, 0.66667, 1.000000 )
%
% Number of total iterations
ITER= 10000


% ------------------------ LINEAR SOLVER DEFINITION ---------------------------%
%
% Linear solver for the implicit (or discrete adjoint) formulation (LU_SGS,
%                                              SYM_GAUSS_SEIDEL, BCGSTAB, GMRES)
LINEAR_SOLVER= BCGSTAB
%
% Preconditioner of the Krylov linear solver (NONE, JACOBI, LINELET, LUSGS)
LINEAR_SOLVER_PREC= LU_SGS
%
% Min error of the linear solver for the implicit formulation
LINEAR_SOLVER_ERROR= 1E-4
%
% Max number of iterations of the linear solver for the implicit formulation
LINEAR_SOLVER_ITER= 10

% -------------------------- MULTIGRID PARAMETERS -----------------------------%
%
% Multi-grid levels (0 = no multi-grid)
MGLEVEL= 0


% --------------------- FLOW NUMERICAL METHOD DEFINITION ----------------------%
% Convective numerical method (JST, LAX-FRIEDRICH, ROE-1ST_ORDER, 
%                              ROE-2ND_ORDER)
CONV_NUM_METHOD_FLOW= ROE
%
% 2nd and 4th order artificial dissipation coefficients
JST_SENSOR_COEFF= ( 0.5, 0.02 )
%
% Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT)
TIME_DISCRE_FLOW= EULER_IMPLICIT

% ----------- SLOPE LIMITER AND DISSIPATION SENSOR DEFINITION -----------------%

%
% Monotonic Upwind Scheme for Conservation Laws (TVD) in the flow equations.
% Required for 2nd order upwind schemes (NO, YES)
MUSCL_FLOW= YES
%
% Slope limiter (NONE, VENKATAKRISHNAN, VENKATAKRISHNAN_WANG,
% BARTH_JESPERSEN, VAN_ALBADA_EDGE)
SLOPE_LIMITER_FLOW= NONE
%
% Monotonic Upwind Scheme for Conservation Laws (TVD) in the turbulence equations.
% Required for 2nd order upwind schemes (NO, YES)
MUSCL_TURB= NO



% ---------------- ADJOINT-FLOW NUMERICAL METHOD DEFINITION -------------------%
% Adjoint problem boundary condition (DRAG, LIFT, SIDEFORCE, MOMENT_X,
%                                     MOMENT_Y, MOMENT_Z, EFFICIENCY, 
%                                     EQUIVALENT_AREA, NEARFIELD_PRESSURE,
%                                     FORCE_X, FORCE_Y, FORCE_Z, THRUST, 
%                                     TORQUE)
OBJECTIVE_FUNCTION= SURFACE_MASSFLOW

% Marker on which to track one-dimensionalized quantities
MARKER_ANALYZE  = (OUTLET, INLET)
%
% Method to compute the average value in MARKER_ANALYZE (AREA, MASSFLUX).
MARKER_ANALYZE_AVERAGE = AREA
%

% Monotonic Upwind Scheme for Conservation Laws (TVD) in the adjoint flow equations.
% Required for 2nd order upwind schemes (NO, YES)
MUSCL_ADJFLOW= YES
% Slope limiter (NONE, VENKATAKRISHNAN, BARTH_JESPERSEN, VAN_ALBADA_EDGE,
% SHARP_EDGES, WALL_DISTANCE)
SLOPE_LIMITER_ADJFLOW= NONE
% Convective numerical method (JST, LAX-FRIEDRICH, ROE-1ST_ORDER, 
%                              ROE-2ND_ORDER)
CONV_NUM_METHOD_ADJFLOW= ROE
%
% 2nd, and 4th order artificial dissipation coefficients
ADJ_JST_SENSOR_COEFF= ( 0.5, 0.02 )
%
% Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT)
TIME_DISCRE_ADJFLOW= EULER_IMPLICIT
%
% Reduction factor of the CFL coefficient in the adjoint problem
CFL_REDUCTION_ADJFLOW= 0.8
%
% Limit value for the adjoint variable
LIMIT_ADJFLOW= 1E6

% List of weighting values when using more than one OBJECTIVE_FUNCTION. Separate by commas and match with MARKER_MONITORING.
OBJECTIVE_WEIGHT= -1.0E-7,1.0


% --------------------------- CONVERGENCE PARAMETERS --------------------------%
% Min value of the residual (log10 of the residual)
CONV_RESIDUAL_MINVAL= -13
%
% Start convergence criteria at iteration number
CONV_STARTITER= 10
%
% Number of elements to apply the criteria
CONV_CAUCHY_ELEMS= 100
%
% Epsilon to control the series convergence
CONV_CAUCHY_EPS= 1E-6
% ------------------------- INPUT/OUTPUT INFORMATION --------------------------%

% Mesh input file
MESH_FILENAME= NozzleConic.su2

%Mesh input file format (SU2, CGNS, NETCDF_ASCII)
MESH_FORMAT = SU2

% Mesh output file
MESH_OUT_FILENAME = mesh_out.su2

% Restart flow input file
SOLUTION_FILENAME = solution_flow.dat

% Restart adjoint input file
SOLUTION_ADJ_FILENAME= solution_adj.dat

% Output tabular file format (TECPLOT, CSV)
TABULAR_FORMAT= CSV

% Output file convergence history (w/o extension) 
CONV_FILENAME = history

% Output file restart flow
RESTART_FILENAME = restart_flow.dat

% Output file restart adjoint
RESTART_ADJ_FILENAME= restart_adj.dat

% Output file flow (w/o extension) variables
VOLUME_FILENAME = flow

% Output file adjoint (w/o extension) variables
VOLUME_ADJ_FILENAME= adjoint

% Output Objective function gradient (using continuous adjoint)
GRAD_OBJFUNC_FILENAME= of_grad.dat

% Output file surface flow coefficient (w/o extension)
SURFACE_FILENAME= surface_flow

% Output file surface adjoint coefficient (w/o extension)
SURFACE_ADJ_FILENAME= surface_adjoint

% Writing solution file frequency
OUTPUT_WRT_FREQ= 1000
%
% Screen output
SCREEN_OUTPUT= (INNER_ITER, RMS_DENSITY, RMS_ENERGY, RMS_ADJ_DENSITY, RMS_ADJ_ENERGY, SURFACE_MACH, SURFACE_MASSFLOW)
%
% Output files
OUTPUT_FILES = (RESTART, PARAVIEW, SURFACE_PARAVIEW, SURFACE_CSV)

HISTORY_OUTPUT = ITER, RMS_RES, FLOW_COEFF, FLOW_COEFF_SURF

% -------------------- FREE-FORM DEFORMATION PARAMETERS -----------------------%
% Tolerance of the Free-Form Deformation point inversion
FFD_TOLERANCE= 1E-10

% Maximum number of iterations in the Free-Form Deformation point inversion
FFD_ITERATIONS= 500

% FFD box definition: 3D case (FFD_BoxTag, X1, Y1, Z1, X2, Y2, Z2, X3, Y3, Z3, X4, Y4, Z4,
%                              X5, Y5, Z5, X6, Y6, Z6, X7, Y7, Z7, X8, Y8, Z8)
%                     2D case (FFD_BoxTag, X1, Y1, 0.0, X2, Y2, 0.0, X3, Y3, 0.0, X4, Y4, 0.0,
%                              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
% Start at the lowest leftest corner and turn counter-clockwise
FFD_DEFINITION= (BOX, \
67.805, 14.00, 0.0, \
147.122, 40.56, 0.0 \
147.122, 50.56, 0.0, \
67.805, 24.00, 0.0, \
0.0, 0.0 ,0.0, \
0.0 ,0.0, 0.0, \
0.0, 0.0, 0.0, \
0.0, 0.0, 0.0 )

FFD_CONTINUITY = 2ND_DERIVATIVE

%
% FFD box degree: 3D case (i_degree, j_degree, k_degree)
%                 2D case (i_degree, j_degree, 0)
FFD_DEGREE= (9, 1, 0)


% ----------------------- DESIGN VARIABLE PARAMETERS --------------------------%
%
DV_KIND= FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D,FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D,FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D,FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D,FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D, FFD_CONTROL_POINT_2D

%
% Marker of the surface in which we are going apply the shape deformation
% NOTE: for deformation the outlet should be a MARKER_SYM to hinder the mesh being ripped apart.
DV_MARKER= (WALL)
%
% Parameters of the shape deformation
% - FFD_SETTING ( 1.0 )
% - FFD_CONTROL_POINT_2D ( FFD_BoxTag, i_Ind, j_Ind, x_Disp, y_Disp )
%DV_PARAM= (BOX, 1, 0, 0.0, 1.0)
DV_PARAM= (BOX, 1, 0, 0.0, 1.0); (BOX, 2, 0, 0.0, 1.0); (BOX, 3, 0, 0.0, 1.0); (BOX, 4, 0, 0.0, 1.0); (BOX, 5, 0, 0.0, 1.0); (BOX, 1, 1, 0.0, 1.0); (BOX, 2, 1, 0.0, 1.0); (BOX, 3, 1, 0.0, 1.0); (BOX, 4, 1, 0.0, 1.0); (BOX, 5, 1, 0.0, 1.0)  

% Excluded FFD points that are fixed to keep a nice geometry
%DV_PARAM= (BOX, 0, 0, 0.0, 1.0); (BOX, 1, 0, 0.0, 1.0); (BOX, 0, 1, 0.0, 1.0); (BOX, 1, 1, 0.0, 1.0);
%
% Value of the shape deformation
% first row:  lower row y-direction
% second row: upper row y-direction
DV_VALUE= 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0
%DV_VALUE= 0.5
% ------------------------ GRID DEFORMATION PARAMETERS ------------------------%

%
% Linear solver or smoother for implicit formulations (FGMRES, RESTARTED_FGMRES, BCGSTAB)
DEFORM_LINEAR_SOLVER= FGMRES
%
% Preconditioner of the Krylov linear solver (ILU, LU_SGS, JACOBI)
DEFORM_LINEAR_SOLVER_PREC= ILU
%
% Number of smoothing iterations for mesh deformation
DEFORM_LINEAR_SOLVER_ITER= 1000
%
% Number of nonlinear deformation iterations (surface deformation increments)
DEFORM_NONLINEAR_ITER= 1
%
% Minimum residual criteria for the linear solver convergence of grid deformation
DEFORM_LINEAR_SOLVER_ERROR= 1E-15
%
% Print the residuals during mesh deformation to the console (YES, NO)
DEFORM_CONSOLE_OUTPUT= YES
%
% Deformation coefficient (linear elasticity limits from -1.0 to 0.5, a larger
% value is also possible)
DEFORM_COEFF = 0.0
%
% Type of element stiffness imposed for FEA mesh deformation (INVERSE_VOLUME,
%                                           WALL_DISTANCE, CONSTANT_STIFFNESS)
DEFORM_STIFFNESS_TYPE= WALL_DISTANCE
%
% Deform the grid only close to the surface. It is possible to specify how much
% of the volumetric grid is going to be deformed in meters or inches (1E6 by default)
DEFORM_LIMIT = 1E6

% --------------------- OPTIMAL SHAPE DESIGN DEFINITION -----------------------%
%
% Available flow based objective functions or constraint functions
%    DRAG, LIFT, SIDEFORCE, EFFICIENCY, BUFFET, 
%    FORCE_X, FORCE_Y, FORCE_Z,
%    MOMENT_X, MOMENT_Y, MOMENT_Z,
%    THRUST, TORQUE, FIGURE_OF_MERIT,
%    EQUIVALENT_AREA, NEARFIELD_PRESSURE,
%    TOTAL_HEATFLUX, MAXIMUM_HEATFLUX,
%    INVERSE_DESIGN_PRESSURE, INVERSE_DESIGN_HEATFLUX,
%    SURFACE_TOTAL_PRESSURE, SURFACE_MASSFLOW
%    SURFACE_STATIC_PRESSURE, SURFACE_MACH
%
% Available geometrical based objective functions or constraint functions
%    AIRFOIL_AREA, AIRFOIL_THICKNESS, AIRFOIL_CHORD, AIRFOIL_TOC, AIRFOIL_AOA,
%    WING_VOLUME, WING_MIN_THICKNESS, WING_MAX_THICKNESS, WING_MAX_CHORD, WING_MIN_TOC, WING_MAX_TWIST, WING_MAX_CURVATURE, WING_MAX_DIHEDRAL
%    STATION#_WIDTH, STATION#_AREA, STATION#_THICKNESS, STATION#_CHORD, STATION#_TOC,
%    STATION#_TWIST (where # is the index of the station defined in GEO_LOCATION_STATIONS)
%
% Available design variables
% 2D Design variables
%    FFD_CONTROL_POINT_2D   (  19, Scale | Mark. List | FFD_BoxTag, i_Ind, j_Ind, x_Mov, y_Mov )
%    FFD_CAMBER_2D          (  20, Scale | Mark. List | FFD_BoxTag, i_Ind )
%    FFD_THICKNESS_2D       (  21, Scale | Mark. List | FFD_BoxTag, i_Ind )
%    FFD_TWIST_2D           (  22, Scale | Mark. List | FFD_BoxTag, x_Orig, y_Orig )
%    HICKS_HENNE            (  30, Scale | Mark. List | Lower(0)/Upper(1) side, x_Loc )
%    ANGLE_OF_ATTACK        ( 101, Scale | Mark. List | 1.0 )
%
% 3D Design variables
%    FFD_CONTROL_POINT      (  11, Scale | Mark. List | FFD_BoxTag, i_Ind, j_Ind, k_Ind, x_Mov, y_Mov, z_Mov )
%    FFD_NACELLE            (  12, Scale | Mark. List | FFD_BoxTag, rho_Ind, theta_Ind, phi_Ind, rho_Mov, phi_Mov )
%    FFD_GULL               (  13, Scale | Mark. List | FFD_BoxTag, j_Ind )
%    FFD_CAMBER             (  14, Scale | Mark. List | FFD_BoxTag, i_Ind, j_Ind )
%    FFD_TWIST              (  15, Scale | Mark. List | FFD_BoxTag, j_Ind, x_Orig, y_Orig, z_Orig, x_End, y_End, z_End )
%    FFD_THICKNESS          (  16, Scale | Mark. List | FFD_BoxTag, i_Ind, j_Ind )
%    FFD_ROTATION           (  18, Scale | Mark. List | FFD_BoxTag, x_Axis, y_Axis, z_Axis, x_Turn, y_Turn, z_Turn )
%    FFD_ANGLE_OF_ATTACK    (  24, Scale | Mark. List | FFD_BoxTag, 1.0 )
%
% Global design variables
%    TRANSLATION            (   1, Scale | Mark. List | x_Disp, y_Disp, z_Disp )
%    ROTATION               (   2, Scale | Mark. List | x_Axis, y_Axis, z_Axis, x_Turn, y_Turn, z_Turn )
%
% Optimization objective function with scaling factor
% ex= Objective * Scale
OPT_OBJECTIVE=  SURFACE_MASSFLOW
%
% Use combined objective within gradient evaluation: may reduce cost to compute gradients when using the adjoint formulation.
%OPT_COMBINE_OBJECTIVE = YES
% Optimization constraint functions with scaling factors, separated by semicolons
% ex= (Objective = Value ) * Scale, use '>','<','='
OPT_CONSTRAINT= NONE
%
% Factor to reduce the norm of the gradient (affects the objective function and gradient in the python scripts)
% In general, a norm of the gradient ~1E-6 is desired.
%OPT_GRADIENT_FACTOR= 1E-6
%
% Factor to relax or accelerate the optimizer convergence (affects the line search in SU2_DEF)
% In general, surface deformations of 0.01'' or 0.0001m are desirable
%OPT_RELAX_FACTOR= 1E-3

% Maximum number of iterations
OPT_ITERATIONS= 300
%
% Requested accuracy
OPT_ACCURACY= 1E-12
%
% Upper bound for each design variable
OPT_BOUND_UPPER= 10.0
%
% Lower bound for each design variable
OPT_BOUND_LOWER= 0.0
%
% Optimization design variables, separated by semicolons
DEFINITION_DV= ( 19, 1.0 | WALL | BOX, 1, 0, 0.0, 1.0 ); ( 19, 1.0 | WALL | BOX, 2, 0, 0.0, 1.0 ); ( 19, 1.0 | WALL | BOX, 3, 0, 0.0, 1.0 ); ( 19, 1.0 | WALL | BOX, 4, 0, 0.0, 1.0 ); ( 19, 1.0 | WALL | BOX, 5, 0, 0.0, 1.0 ); ( 19, 1.0 | WALL | BOX, 6, 0, 0.0, 1.0 ); ( 19, 1.0 | WALL | BOX, 7, 0, 0.0, 1.0 ); ( 19, 1.0 | WALL | BOX, 8, 0, 0.0, 1.0 );  ( 19, 1.0 | WALL | BOX, 1, 1, 0.0, 1.0 ); ( 19, 1.0 | WALL | BOX, 2, 1, 0.0, 1.0 ); ( 19, 1.0 | WALL | BOX, 3, 1, 0.0, 1.0 ); ( 19, 1.0 | WALL | BOX, 4, 1, 0.0, 1.0 ); ( 19, 1.0 | WALL | BOX, 5, 1, 0.0, 1.0 ); ( 19, 1.0 | WALL | BOX, 6, 1, 0.0, 1.0 ); ( 19, 1.0 | WALL | BOX, 7, 1, 0.0, 1.0 ); ( 19, 1.0 | WALL | BOX, 8, 1, 0.0, 1.0 )